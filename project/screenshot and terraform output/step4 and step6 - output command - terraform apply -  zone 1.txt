ldtruc@UBT-2204:~$
ldtruc@UBT-2204:~$
ldtruc@UBT-2204:~$
ldtruc@UBT-2204:~$ git clone https://github.com/ledoantruc/Udacity-SRE-Planning-for-High-Availability-and-Incident-Response.git
Cloning into 'Udacity-SRE-Planning-for-High-Availability-and-Incident-Response'...
remote: Enumerating objects: 806, done.
remote: Counting objects: 100% (297/297), done.
remote: Compressing objects: 100% (291/291), done.
remote: Total 806 (delta 163), reused 16 (delta 6), pack-reused 509
Receiving objects: 100% (806/806), 253.70 KiB | 3.09 MiB/s, done.
Resolving deltas: 100% (408/408), done.
ldtruc@UBT-2204:~$
ldtruc@UBT-2204:~$
ldtruc@UBT-2204:~$
ldtruc@UBT-2204:~$ mv Udacity-SRE-Planning-for-High-Availability-and-Incident-Response ldtruc
ldtruc@UBT-2204:~$ cd ldtruc/
.git/                                lesson-3-assests-ha-dr/              project/
.github/                             lesson-4-deploying-terraform-assets/
lesson-2-sli-slo/                    lesson-5-rds-deploy/
ldtruc@UBT-2204:~$ cd ldtruc/project/starter-code/zone1
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$ terraform init
Initializing modules...
- project_alb in modules/alb
- project_ec2 in modules/ec2
- project_eks in modules/eks
- project_rds_p in modules/rds-p
- project_rds_s in modules/rds-s
- vpc in modules/vpc
- vpc_west in modules/vpc

Initializing the backend...

Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.

Initializing provider plugins...
- Finding latest version of hashicorp/kubernetes...
- Finding latest version of hashicorp/aws...
- Installing hashicorp/kubernetes v2.12.1...
- Installed hashicorp/kubernetes v2.12.1 (signed by HashiCorp)
- Installing hashicorp/aws v4.25.0...
- Installed hashicorp/aws v4.25.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

?
¦ Warning: Provider aws is undefined
¦
¦   on main.tf line 43, in module "vpc_west":
¦   43:     aws = aws.usw1
¦
¦ Module module.vpc_west does not declare a provider named aws.
¦ If you wish to specify a provider configuration for the module, add an entry for aws in the required_providers block within the
¦ module.
¦
¦ (and one more similar warning elsewhere)
?

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following
symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_eks_cluster.cluster will be read during apply
  # (config refers to values not yet known)
 <= data "aws_eks_cluster" "cluster"  {
      + arn                       = (known after apply)
      + certificate_authority     = (known after apply)
      + created_at                = (known after apply)
      + enabled_cluster_log_types = (known after apply)
      + endpoint                  = (known after apply)
      + id                        = (known after apply)
      + identity                  = (known after apply)
      + kubernetes_network_config = (known after apply)
      + name                      = (known after apply)
      + platform_version          = (known after apply)
      + role_arn                  = (known after apply)
      + status                    = (known after apply)
      + tags                      = (known after apply)
      + version                   = (known after apply)
      + vpc_config                = (known after apply)
    }

  # data.aws_eks_cluster_auth.cluster will be read during apply
  # (config refers to values not yet known)
 <= data "aws_eks_cluster_auth" "cluster"  {
      + id    = (known after apply)
      + name  = (known after apply)
      + token = (sensitive value)
    }

  # kubernetes_namespace.monitoring will be created
  + resource "kubernetes_namespace" "monitoring" {
      + id = (known after apply)

      + metadata {
          + generation       = (known after apply)
          + name             = "monitoring"
          + resource_version = (known after apply)
          + uid              = (known after apply)
        }
    }

  # kubernetes_namespace.udacity will be created
  + resource "kubernetes_namespace" "udacity" {
      + id = (known after apply)

      + metadata {
          + generation       = (known after apply)
          + name             = "udacity"
          + resource_version = (known after apply)
          + uid              = (known after apply)
        }
    }

  # kubernetes_service.grafana-external will be created
  + resource "kubernetes_service" "grafana-external" {
      + id                     = (known after apply)
      + status                 = (known after apply)
      + wait_for_load_balancer = true

      + metadata {
          + annotations      = {
              + "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type" = "ip"
              + "service.beta.kubernetes.io/aws-load-balancer-type"            = "nlb"
            }
          + generation       = (known after apply)
          + name             = "grafana-external"
          + namespace        = "monitoring"
          + resource_version = (known after apply)
          + uid              = (known after apply)
        }

      + spec {
          + allocate_load_balancer_node_ports = true
          + cluster_ip                        = (known after apply)
          + cluster_ips                       = (known after apply)
          + external_traffic_policy           = (known after apply)
          + health_check_node_port            = (known after apply)
          + internal_traffic_policy           = (known after apply)
          + ip_families                       = (known after apply)
          + ip_family_policy                  = (known after apply)
          + publish_not_ready_addresses       = false
          + selector                          = {
              + "app.kubernetes.io/name" = "grafana"
            }
          + session_affinity                  = "None"
          + type                              = "LoadBalancer"

          + port {
              + node_port   = (known after apply)
              + port        = 80
              + protocol    = "TCP"
              + target_port = "3000"
            }

          + session_affinity_config {
              + client_ip {
                  + timeout_seconds = (known after apply)
                }
            }
        }
    }

  # module.project_alb.aws_lb.udacity will be created
  + resource "aws_lb" "udacity" {
      + arn                        = (known after apply)
      + arn_suffix                 = (known after apply)
      + desync_mitigation_mode     = "defensive"
      + dns_name                   = (known after apply)
      + drop_invalid_header_fields = false
      + enable_deletion_protection = false
      + enable_http2               = true
      + enable_waf_fail_open       = false
      + id                         = (known after apply)
      + idle_timeout               = 60
      + internal                   = false
      + ip_address_type            = (known after apply)
      + load_balancer_type         = "application"
      + name                       = "udacity-lb-tf"
      + preserve_host_header       = false
      + security_groups            = (known after apply)
      + subnets                    = (known after apply)
      + tags_all                   = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + vpc_id                     = (known after apply)
      + zone_id                    = (known after apply)

      + subnet_mapping {
          + allocation_id        = (known after apply)
          + ipv6_address         = (known after apply)
          + outpost_id           = (known after apply)
          + private_ipv4_address = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # module.project_alb.aws_lb_listener.udacity will be created
  + resource "aws_lb_listener" "udacity" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + load_balancer_arn = (known after apply)
      + port              = 80
      + protocol          = "HTTP"
      + ssl_policy        = (known after apply)
      + tags_all          = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }
    }

  # module.project_alb.aws_lb_target_group.udacity will be created
  + resource "aws_lb_target_group" "udacity" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = false
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancing_algorithm_type      = (known after apply)
      + name                               = "udacity-lb-tg"
      + port                               = 80
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "HTTP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags_all                           = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check {
          + enabled             = (known after apply)
          + healthy_threshold   = (known after apply)
          + interval            = (known after apply)
          + matcher             = (known after apply)
          + path                = (known after apply)
          + port                = (known after apply)
          + protocol            = (known after apply)
          + timeout             = (known after apply)
          + unhealthy_threshold = (known after apply)
        }

      + stickiness {
          + cookie_duration = (known after apply)
          + cookie_name     = (known after apply)
          + enabled         = (known after apply)
          + type            = (known after apply)
        }
    }

  # module.project_alb.aws_lb_target_group_attachment.udacity[0] will be created
  + resource "aws_lb_target_group_attachment" "udacity" {
      + id               = (known after apply)
      + port             = 80
      + target_group_arn = (known after apply)
      + target_id        = (known after apply)
    }

  # module.project_alb.aws_lb_target_group_attachment.udacity[1] will be created
  + resource "aws_lb_target_group_attachment" "udacity" {
      + id               = (known after apply)
      + port             = 80
      + target_group_arn = (known after apply)
      + target_id        = (known after apply)
    }

  # module.project_alb.aws_lb_target_group_attachment.udacity[2] will be created
  + resource "aws_lb_target_group_attachment" "udacity" {
      + id               = (known after apply)
      + port             = 80
      + target_group_arn = (known after apply)
      + target_id        = (known after apply)
    }

  # module.project_ec2.aws_instance.ubuntu[0] will be created
  + resource "aws_instance" "ubuntu" {
      + ami                                  = "ami-0562a1f85d56526b5"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "udacity"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Ubuntu-Web"
        }
      + tags_all                             = {
          + "Name"      = "Ubuntu-Web"
          + "Terraform" = "true"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + private_dns_name_options {
          + enable_resource_name_dns_a_record    = (known after apply)
          + enable_resource_name_dns_aaaa_record = (known after apply)
          + hostname_type                        = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # module.project_ec2.aws_instance.ubuntu[1] will be created
  + resource "aws_instance" "ubuntu" {
      + ami                                  = "ami-0562a1f85d56526b5"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "udacity"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Ubuntu-Web"
        }
      + tags_all                             = {
          + "Name"      = "Ubuntu-Web"
          + "Terraform" = "true"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + private_dns_name_options {
          + enable_resource_name_dns_a_record    = (known after apply)
          + enable_resource_name_dns_aaaa_record = (known after apply)
          + hostname_type                        = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # module.project_ec2.aws_instance.ubuntu[2] will be created
  + resource "aws_instance" "ubuntu" {
      + ami                                  = "ami-0562a1f85d56526b5"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "udacity"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Ubuntu-Web"
        }
      + tags_all                             = {
          + "Name"      = "Ubuntu-Web"
          + "Terraform" = "true"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + private_dns_name_options {
          + enable_resource_name_dns_a_record    = (known after apply)
          + enable_resource_name_dns_aaaa_record = (known after apply)
          + hostname_type                        = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # module.project_ec2.aws_security_group.ec2_sg will be created
  + resource "aws_security_group" "ec2_sg" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "monitoring"
              + from_port        = 9100
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 9100
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "ssh port"
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "web port"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
        ]
      + name                   = "ec2_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "ec2_sg"
        }
      + tags_all               = {
          + "Name"      = "ec2_sg"
          + "Terraform" = "true"
        }
      + vpc_id                 = (known after apply)
    }

  # module.project_eks.data.aws_iam_policy_document.eks_assume_role_policy will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "eks_assume_role_policy"  {
      + id   = (known after apply)
      + json = (known after apply)

      + statement {
          + actions = [
              + "sts:AssumeRole",
            ]

          + principals {
              + identifiers = [
                  + "eks.amazonaws.com",
                ]
              + type        = "Service"
            }
        }
    }

  # module.project_eks.data.aws_iam_policy_document.eks_node_assume_role_policy will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "eks_node_assume_role_policy"  {
      + id   = (known after apply)
      + json = (known after apply)

      + statement {
          + actions = [
              + "sts:AssumeRole",
            ]

          + principals {
              + identifiers = [
                  + "ec2.amazonaws.com",
                ]
              + type        = "Service"
            }
        }
    }

  # module.project_eks.aws_eks_cluster.cluster will be created
  + resource "aws_eks_cluster" "cluster" {
      + arn                   = (known after apply)
      + certificate_authority = (known after apply)
      + created_at            = (known after apply)
      + endpoint              = (known after apply)
      + id                    = (known after apply)
      + identity              = (known after apply)
      + name                  = "udacity-cluster"
      + platform_version      = (known after apply)
      + role_arn              = (known after apply)
      + status                = (known after apply)
      + tags_all              = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + version               = "1.21"

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
        }

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = false
          + endpoint_public_access    = true
          + public_access_cidrs       = (known after apply)
          + security_group_ids        = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # module.project_eks.aws_eks_node_group.node will be created
  + resource "aws_eks_node_group" "node" {
      + ami_type               = (known after apply)
      + arn                    = (known after apply)
      + capacity_type          = (known after apply)
      + cluster_name           = "udacity-cluster"
      + disk_size              = (known after apply)
      + id                     = (known after apply)
      + instance_types         = [
          + "t3.medium",
        ]
      + node_group_name        = "app-udacity-node-group"
      + node_group_name_prefix = (known after apply)
      + node_role_arn          = (known after apply)
      + release_version        = (known after apply)
      + resources              = (known after apply)
      + status                 = (known after apply)
      + subnet_ids             = (known after apply)
      + tags                   = {
          + "Name" = "eks-udacity-nodes"
        }
      + tags_all               = {
          + "Name"      = "eks-udacity-nodes"
          + "Terraform" = "true"
        }
      + version                = (known after apply)

      + scaling_config {
          + desired_size = 2
          + max_size     = 2
          + min_size     = 2
        }

      + update_config {
          + max_unavailable            = (known after apply)
          + max_unavailable_percentage = (known after apply)
        }
    }

  # module.project_eks.aws_iam_policy.eks_cluster_role_cloudwatch_policy will be created
  + resource "aws_iam_policy" "eks_cluster_role_cloudwatch_policy" {
      + arn         = (known after apply)
      + description = "Policy allowing cloudwatch access to udacity resources."
      + id          = (known after apply)
      + name        = "app-udacity-eks-cluster-role-cloudwatch-policy"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "cloudwatch:*",
                          + "logs:DescribeLogGroups",
                          + "logs:DescribeLogStreams",
                          + "logs:CreateLogGroup",
                          + "logs:CreateLogStream",
                          + "logs:PutLogEvents",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
    }

  # module.project_eks.aws_iam_policy.eks_node_instance_policy will be created
  + resource "aws_iam_policy" "eks_node_instance_policy" {
      + arn         = (known after apply)
      + description = "Policy allowing access to udacity resources."
      + id          = (known after apply)
      + name        = "app-udacity-instance-policy"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = "s3:*"
                      + Effect   = "Allow"
                      + Resource = [
                          + "arn:aws:s3:::*",
                          + "arn:aws:s3:::*/*",
                          + "arn:aws:s3:*:*:job/*",
                        ]
                    },
                  + {
                      + Action   = [
                          + "logs:CreateLogGroup",
                          + "logs:CreateLogStream",
                          + "logs:PutLogEvents",
                        ]
                      + Effect   = "Allow"
                      + Resource = [
                          + "arn:aws:logs:*:*:log-group:*",
                          + "arn:aws:logs:*:*:log-group:*:*:*",
                        ]
                    },
                  + {
                      + Action   = [
                          + "ecr:BatchCheckLayerAvailability",
                          + "ecr:BatchGetImage",
                          + "ecr:DescribeImages",
                          + "ecr:DescribeRepositories",
                          + "ecr:GetAuthorizationToken",
                          + "ecr:GetDownloadUrlForLayer",
                          + "ecr:GetRepositoryPolicy",
                          + "ecr:ListImages",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                  + {
                      + Action   = [
                          + "sqs:ReceiveMessage",
                          + "sqs:SendMessage",
                          + "sqs:SendMessageBatch",
                          + "sqs:DeleteMessage",
                          + "sqs:DeleteMessageBatch",
                          + "sqs:ChangeMessageVisibility",
                          + "sqs:ChangeMessageVisibilityBatch",
                        ]
                      + Effect   = "Allow"
                      + Resource = [
                          + "*",
                        ]
                    },
                  + {
                      + Action   = "eks:DescribeCluster"
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
    }

  # module.project_eks.aws_iam_role.eks_cluster_role will be created
  + resource "aws_iam_role" "eks_cluster_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = (known after apply)
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "app-udacity-eks-cluster-role"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # module.project_eks.aws_iam_role.eks_node_cluster_role will be created
  + resource "aws_iam_role" "eks_node_cluster_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = (known after apply)
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "app-udacity-eks-node-role"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSCloudwatchPolicy will be created
  + resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSCloudwatchPolicy" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = "app-udacity-eks-node-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy will be created
  + resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSClusterPolicy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = "app-udacity-eks-cluster-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy will be created
  + resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSServicePolicy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      + role       = "app-udacity-eks-cluster-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly will be created
  + resource "aws_iam_role_policy_attachment" "node_AmazonEC2ContainerRegistryReadOnly" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      + role       = "app-udacity-eks-node-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy will be created
  + resource "aws_iam_role_policy_attachment" "node_AmazonEKSWorkerNodePolicy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      + role       = "app-udacity-eks-node-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy will be created
  + resource "aws_iam_role_policy_attachment" "node_AmazonEKS_CNI_Policy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      + role       = "app-udacity-eks-node-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.node_CloudWatchAgentServerPolicy will be created
  + resource "aws_iam_role_policy_attachment" "node_CloudWatchAgentServerPolicy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
      + role       = "app-udacity-eks-node-role"
    }

  # module.project_eks.aws_iam_role_policy_attachment.node_harmony_policy_attachment will be created
  + resource "aws_iam_role_policy_attachment" "node_harmony_policy_attachment" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = "app-udacity-eks-node-role"
    }

  # module.project_eks.aws_security_group.eks-cluster will be created
  + resource "aws_security_group" "eks-cluster" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + name                   = "SG-eks-cluster"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + vpc_id                 = (known after apply)
    }

  # module.project_rds_p.aws_db_subnet_group.udacity_db_subnet_group will be created
  + resource "aws_db_subnet_group" "udacity_db_subnet_group" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "udacity_db_subnet_group"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
    }

  # module.project_rds_p.aws_rds_cluster.udacity_cluster will be created
  + resource "aws_rds_cluster" "udacity_cluster" {
      + allocated_storage               = (known after apply)
      + apply_immediately               = (known after apply)
      + arn                             = (known after apply)
      + availability_zones              = [
          + "us-east-2a",
          + "us-east-2b",
          + "us-east-2c",
        ]
      + backup_retention_period         = 5
      + cluster_identifier              = "udacity-db-cluster"
      + cluster_identifier_prefix       = (known after apply)
      + cluster_members                 = (known after apply)
      + cluster_resource_id             = (known after apply)
      + copy_tags_to_snapshot           = false
      + database_name                   = "udacityc2"
      + db_cluster_parameter_group_name = "udacity-pg-p"
      + db_subnet_group_name            = "udacity_db_subnet_group"
      + enable_global_write_forwarding  = false
      + enable_http_endpoint            = false
      + endpoint                        = (known after apply)
      + engine                          = "aurora"
      + engine_mode                     = "provisioned"
      + engine_version                  = "5.6.mysql_aurora.1.19.1"
      + engine_version_actual           = (known after apply)
      + hosted_zone_id                  = (known after apply)
      + iam_roles                       = (known after apply)
      + id                              = (known after apply)
      + kms_key_id                      = (known after apply)
      + master_password                 = (sensitive value)
      + master_username                 = "udacity"
      + port                            = (known after apply)
      + preferred_backup_window         = (known after apply)
      + preferred_maintenance_window    = (known after apply)
      + reader_endpoint                 = (known after apply)
      + skip_final_snapshot             = true
      + storage_encrypted               = false
      + tags_all                        = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + vpc_security_group_ids          = (known after apply)
    }

  # module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0] will be created
  + resource "aws_rds_cluster_instance" "udacity_instance" {
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + cluster_identifier                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_parameter_group_name               = (known after apply)
      + db_subnet_group_name                  = "udacity_db_subnet_group"
      + dbi_resource_id                       = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "aurora"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "udacity-db-instance-0"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t2.small"
      + kms_key_id                            = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + performance_insights_enabled          = (known after apply)
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + preferred_backup_window               = (known after apply)
      + preferred_maintenance_window          = (known after apply)
      + promotion_tier                        = 0
      + publicly_accessible                   = false
      + storage_encrypted                     = (known after apply)
      + tags_all                              = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + writer                                = (known after apply)
    }

  # module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1] will be created
  + resource "aws_rds_cluster_instance" "udacity_instance" {
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + cluster_identifier                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_parameter_group_name               = (known after apply)
      + db_subnet_group_name                  = "udacity_db_subnet_group"
      + dbi_resource_id                       = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "aurora"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "udacity-db-instance-1"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t2.small"
      + kms_key_id                            = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + performance_insights_enabled          = (known after apply)
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + preferred_backup_window               = (known after apply)
      + preferred_maintenance_window          = (known after apply)
      + promotion_tier                        = 0
      + publicly_accessible                   = false
      + storage_encrypted                     = (known after apply)
      + tags_all                              = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + writer                                = (known after apply)
    }

  # module.project_rds_p.aws_rds_cluster_parameter_group.cluster_pg will be created
  + resource "aws_rds_cluster_parameter_group" "cluster_pg" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + family      = "aurora5.6"
      + id          = (known after apply)
      + name        = "udacity-pg-p"
      + name_prefix = (known after apply)
      + tags_all    = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }

      + parameter {
          + apply_method = "pending-reboot"
          + name         = "binlog_format"
          + value        = "MIXED"
        }
      + parameter {
          + apply_method = "pending-reboot"
          + name         = "log_bin_trust_function_creators"
          + value        = "1"
        }
    }

  # module.project_rds_p.aws_security_group.db_sg_1 will be created
  + resource "aws_security_group" "db_sg_1" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 3306
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3306
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 3306
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3306
            },
        ]
      + name                   = "udacity-db-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = {
          + "Name"      = "udacity"
          + "Terraform" = "true"
        }
      + vpc_id                 = (known after apply)
    }

  # module.project_rds_s.aws_db_subnet_group.udacity_db_subnet_group will be created
  + resource "aws_db_subnet_group" "udacity_db_subnet_group" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "udacity_db_subnet_group"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # module.project_rds_s.aws_rds_cluster.udacity_cluster-s will be created
  + resource "aws_rds_cluster" "udacity_cluster-s" {
      + allocated_storage               = (known after apply)
      + apply_immediately               = (known after apply)
      + arn                             = (known after apply)
      + availability_zones              = [
          + "us-west-1a",
          + "us-west-1b",
        ]
      + backup_retention_period         = 5
      + cluster_identifier              = "udacity-db-cluster-s"
      + cluster_identifier_prefix       = (known after apply)
      + cluster_members                 = (known after apply)
      + cluster_resource_id             = (known after apply)
      + copy_tags_to_snapshot           = false
      + database_name                   = (known after apply)
      + db_cluster_parameter_group_name = "udacity-pg-s"
      + db_subnet_group_name            = "udacity_db_subnet_group"
      + enable_global_write_forwarding  = false
      + enable_http_endpoint            = false
      + endpoint                        = (known after apply)
      + engine                          = "aurora"
      + engine_mode                     = "provisioned"
      + engine_version                  = "5.6.mysql_aurora.1.19.1"
      + engine_version_actual           = (known after apply)
      + hosted_zone_id                  = (known after apply)
      + iam_roles                       = (known after apply)
      + id                              = (known after apply)
      + kms_key_id                      = (known after apply)
      + master_username                 = (known after apply)
      + port                            = (known after apply)
      + preferred_backup_window         = (known after apply)
      + preferred_maintenance_window    = (known after apply)
      + reader_endpoint                 = (known after apply)
      + replication_source_identifier   = (known after apply)
      + skip_final_snapshot             = true
      + source_region                   = "us-east-2"
      + storage_encrypted               = false
      + tags_all                        = (known after apply)
      + vpc_security_group_ids          = (known after apply)
    }

  # module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0] will be created
  + resource "aws_rds_cluster_instance" "udacity_instance-s" {
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + cluster_identifier                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_parameter_group_name               = (known after apply)
      + db_subnet_group_name                  = "udacity_db_subnet_group"
      + dbi_resource_id                       = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "aurora"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "udacity-db-instance-0-s"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t2.small"
      + kms_key_id                            = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + performance_insights_enabled          = (known after apply)
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + preferred_backup_window               = (known after apply)
      + preferred_maintenance_window          = (known after apply)
      + promotion_tier                        = 0
      + publicly_accessible                   = false
      + storage_encrypted                     = (known after apply)
      + tags_all                              = (known after apply)
      + writer                                = (known after apply)
    }

  # module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1] will be created
  + resource "aws_rds_cluster_instance" "udacity_instance-s" {
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + cluster_identifier                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_parameter_group_name               = (known after apply)
      + db_subnet_group_name                  = "udacity_db_subnet_group"
      + dbi_resource_id                       = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "aurora"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "udacity-db-instance-1-s"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t2.small"
      + kms_key_id                            = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + performance_insights_enabled          = (known after apply)
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + preferred_backup_window               = (known after apply)
      + preferred_maintenance_window          = (known after apply)
      + promotion_tier                        = 0
      + publicly_accessible                   = false
      + storage_encrypted                     = (known after apply)
      + tags_all                              = (known after apply)
      + writer                                = (known after apply)
    }

  # module.project_rds_s.aws_rds_cluster_parameter_group.cluster_pg-s will be created
  + resource "aws_rds_cluster_parameter_group" "cluster_pg-s" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + family      = "aurora5.6"
      + id          = (known after apply)
      + name        = "udacity-pg-s"
      + name_prefix = (known after apply)
      + tags_all    = (known after apply)

      + parameter {
          + apply_method = "pending-reboot"
          + name         = "binlog_format"
          + value        = "MIXED"
        }
      + parameter {
          + apply_method = "pending-reboot"
          + name         = "log_bin_trust_function_creators"
          + value        = "1"
        }
    }

  # module.project_rds_s.aws_security_group.db_sg_2 will be created
  + resource "aws_security_group" "db_sg_2" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 3306
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3306
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 3306
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3306
            },
        ]
      + name                   = "udacity-db-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "udacity-project-us-east-2a"
        }
      + tags_all             = {
          + "Name"      = "udacity-project-us-east-2a"
          + "Terraform" = "true"
        }
      + vpc                  = true
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "udacity-project"
        }
      + tags_all = {
          + "Name"      = "udacity-project"
          + "Terraform" = "true"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "udacity-project-us-east-2a"
        }
      + tags_all             = {
          + "Name"      = "udacity-project-us-east-2a"
          + "Terraform" = "true"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[1] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[2] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[1] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[2] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-private-us-east-2a"
        }
      + tags_all         = {
          + "Name"      = "udacity-project-private-us-east-2a"
          + "Terraform" = "true"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private[1] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-private-us-east-2b"
        }
      + tags_all         = {
          + "Name"      = "udacity-project-private-us-east-2b"
          + "Terraform" = "true"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private[2] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-private-us-east-2c"
        }
      + tags_all         = {
          + "Name"      = "udacity-project-private-us-east-2c"
          + "Terraform" = "true"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-public"
        }
      + tags_all         = {
          + "Name"      = "udacity-project-public"
          + "Terraform" = "true"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[2] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[2] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                            = "udacity-project-private-us-east-2a"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                            = "udacity-project-private-us-east-2a"
          + "Terraform"                       = "true"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                            = "udacity-project-private-us-east-2b"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                            = "udacity-project-private-us-east-2b"
          + "Terraform"                       = "true"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[2] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                            = "udacity-project-private-us-east-2c"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                            = "udacity-project-private-us-east-2c"
          + "Terraform"                       = "true"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.10.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                   = "udacity-project-public-us-east-2a"
          + "kubernetes.io/role/elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                   = "udacity-project-public-us-east-2a"
          + "Terraform"              = "true"
          + "kubernetes.io/role/elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.11.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                   = "udacity-project-public-us-east-2b"
          + "kubernetes.io/role/elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                   = "udacity-project-public-us-east-2b"
          + "Terraform"              = "true"
          + "kubernetes.io/role/elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[2] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.12.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                   = "udacity-project-public-us-east-2c"
          + "kubernetes.io/role/elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                   = "udacity-project-public-us-east-2c"
          + "Terraform"              = "true"
          + "kubernetes.io/role/elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.100.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "udacity-project"
        }
      + tags_all                             = {
          + "Name"      = "udacity-project"
          + "Terraform" = "true"
        }
    }

  # module.vpc_west.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "udacity-project-us-west-1a"
        }
      + tags_all             = {
          + "Name" = "udacity-project-us-west-1a"
        }
      + vpc                  = true
    }

  # module.vpc_west.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "udacity-project"
        }
      + tags_all = {
          + "Name" = "udacity-project"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc_west.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "udacity-project-us-west-1a"
        }
      + tags_all             = {
          + "Name" = "udacity-project-us-west-1a"
        }
    }

  # module.vpc_west.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc_west.aws_route.private_nat_gateway[1] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc_west.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc_west.aws_route.public_internet_gateway[1] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc_west.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-private-us-west-1a"
        }
      + tags_all         = {
          + "Name" = "udacity-project-private-us-west-1a"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc_west.aws_route_table.private[1] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-private-us-west-1b"
        }
      + tags_all         = {
          + "Name" = "udacity-project-private-us-west-1b"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc_west.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "udacity-project-public"
        }
      + tags_all         = {
          + "Name" = "udacity-project-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc_west.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc_west.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc_west.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc_west.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc_west.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                            = "udacity-project-private-us-west-1a"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                            = "udacity-project-private-us-west-1a"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc_west.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                            = "udacity-project-private-us-west-1b"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                            = "udacity-project-private-us-west-1b"
          + "kubernetes.io/role/internal-elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc_west.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.10.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                   = "udacity-project-public-us-west-1a"
          + "kubernetes.io/role/elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                   = "udacity-project-public-us-west-1a"
          + "kubernetes.io/role/elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc_west.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.100.11.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"                   = "udacity-project-public-us-west-1b"
          + "kubernetes.io/role/elb" = "1"
        }
      + tags_all                                       = {
          + "Name"                   = "udacity-project-public-us-west-1b"
          + "kubernetes.io/role/elb" = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc_west.aws_vpc.this will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.100.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "udacity-project"
        }
      + tags_all                             = {
          + "Name" = "udacity-project"
        }
    }

Plan: 85 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id         = "589771056122"
  + caller_arn         = "arn:aws:iam::589771056122:user/trucld1-udacity"
  + caller_user        = "AIDAYSUIYEP5CG7XZHII2"
  + private_subnet_ids = [
      + (known after apply),
      + (known after apply),
    ]
  + public_subnet_ids  = [
      + (known after apply),
      + (known after apply),
    ]
  + vpc_id             = (known after apply)
?
¦ Warning: Provider aws is undefined
¦
¦   on main.tf line 43, in module "vpc_west":
¦   43:     aws = aws.usw1
¦
¦ Module module.vpc_west does not declare a provider named aws.
¦ If you wish to specify a provider configuration for the module, add an entry for aws in the required_providers block within the
¦ module.
¦
¦ (and one more similar warning elsewhere)
?

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.vpc_west.aws_vpc.this: Creating...
module.vpc_west.aws_eip.nat[0]: Creating...
module.project_rds_s.aws_rds_cluster_parameter_group.cluster_pg-s: Creating...
module.vpc_west.aws_eip.nat[0]: Creation complete after 2s [id=eipalloc-0eb9cd24e66b7d122]
module.vpc.aws_vpc.this: Creating...
module.project_rds_p.aws_rds_cluster_parameter_group.cluster_pg: Creating...
module.vpc.aws_eip.nat[0]: Creating...
module.project_rds_s.aws_rds_cluster_parameter_group.cluster_pg-s: Creation complete after 2s [id=udacity-pg-s]
module.vpc.aws_eip.nat[0]: Creation complete after 2s [id=eipalloc-03c10b2131e60ca12]
module.project_rds_p.aws_rds_cluster_parameter_group.cluster_pg: Creation complete after 3s [id=udacity-pg-p]
module.vpc_west.aws_vpc.this: Still creating... [10s elapsed]
module.vpc.aws_vpc.this: Still creating... [10s elapsed]
module.vpc_west.aws_vpc.this: Creation complete after 14s [id=vpc-09f2e9e2510d36448]
module.vpc_west.aws_route_table.private[0]: Creating...
module.vpc_west.aws_subnet.private[1]: Creating...
module.vpc_west.aws_subnet.public[0]: Creating...
module.vpc_west.aws_subnet.public[1]: Creating...
module.vpc_west.aws_subnet.private[0]: Creating...
module.vpc_west.aws_route_table.public[0]: Creating...
module.vpc_west.aws_internet_gateway.this[0]: Creating...
module.vpc_west.aws_route_table.private[1]: Creating...
module.project_rds_s.aws_security_group.db_sg_2: Creating...
module.vpc_west.aws_subnet.private[1]: Creation complete after 2s [id=subnet-084c2893494395779]
module.vpc_west.aws_subnet.private[0]: Creation complete after 2s [id=subnet-021ee4548145d8bb3]
module.vpc_west.aws_route_table.private[0]: Creation complete after 2s [id=rtb-0ca9157bf8c0c9104]
module.project_rds_s.aws_db_subnet_group.udacity_db_subnet_group: Creating...
module.vpc_west.aws_internet_gateway.this[0]: Creation complete after 2s [id=igw-0389b8a9ea7058967]
module.vpc_west.aws_route_table.public[0]: Creation complete after 2s [id=rtb-0e5147495f6ffc9c4]
module.vpc_west.aws_route.public_internet_gateway[1]: Creating...
module.vpc_west.aws_route.public_internet_gateway[0]: Creating...
module.vpc_west.aws_route_table.private[1]: Creation complete after 2s [id=rtb-08ee97fe28a8095ae]
module.vpc_west.aws_route_table_association.private[0]: Creating...
module.vpc_west.aws_route_table_association.private[1]: Creating...
module.vpc.aws_vpc.this: Creation complete after 15s [id=vpc-0dc6810ad474448fe]
module.project_rds_s.aws_db_subnet_group.udacity_db_subnet_group: Creation complete after 1s [id=udacity_db_subnet_group]
module.vpc_west.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-0e7210d072592a2c6]
module.vpc.aws_route_table.private[1]: Creating...
module.vpc_west.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-04966d911cbcf9af5]
module.vpc.aws_subnet.private[1]: Creating...
module.vpc.aws_subnet.private[2]: Creating...
module.vpc.aws_subnet.public[2]: Creating...
module.vpc.aws_subnet.public[1]: Creating...
module.vpc_west.aws_route.public_internet_gateway[1]: Creation complete after 1s [id=r-rtb-0e5147495f6ffc9c41080289494]
module.vpc_west.aws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-0e5147495f6ffc9c41080289494]
module.vpc.aws_subnet.private[0]: Creating...
module.vpc.aws_route_table.public[0]: Creating...
module.project_rds_s.aws_security_group.db_sg_2: Creation complete after 5s [id=sg-099868f9d5a643b4c]
module.vpc.aws_route_table.private[0]: Creating...
module.vpc.aws_subnet.private[1]: Creation complete after 2s [id=subnet-0e28816dc474abbc5]
module.vpc.aws_subnet.public[0]: Creating...
module.vpc.aws_subnet.private[2]: Creation complete after 2s [id=subnet-01ee442e69a1ff89a]
module.vpc.aws_internet_gateway.this[0]: Creating...
module.vpc.aws_route_table.private[1]: Creation complete after 2s [id=rtb-09b47162c38f6feef]
module.vpc.aws_route_table.private[2]: Creating...
module.vpc.aws_route_table.public[0]: Creation complete after 3s [id=rtb-08c9774303d5f8467]
module.project_ec2.aws_security_group.ec2_sg: Creating...
module.vpc.aws_subnet.private[0]: Creation complete after 3s [id=subnet-0b52a08332988452e]
module.project_alb.aws_lb_target_group.udacity: Creating...
module.vpc.aws_route_table.private[0]: Creation complete after 1s [id=rtb-017071547e2a05597]
module.project_rds_p.aws_security_group.db_sg_1: Creating...
module.vpc.aws_internet_gateway.this[0]: Creation complete after 2s [id=igw-0a4a70884f26ec000]
module.vpc.aws_route.public_internet_gateway[2]: Creating...
module.vpc.aws_route_table.private[2]: Creation complete after 2s [id=rtb-0292f329ea560ecf6]
module.project_rds_p.aws_db_subnet_group.udacity_db_subnet_group: Creating...
module.vpc.aws_route.public_internet_gateway[2]: Creation complete after 1s [id=r-rtb-08c9774303d5f84671080289494]
module.project_rds_p.aws_db_subnet_group.udacity_db_subnet_group: Creation complete after 1s [id=udacity_db_subnet_group]
module.vpc.aws_route.public_internet_gateway[0]: Creating...
module.vpc.aws_route.public_internet_gateway[1]: Creating...
module.project_alb.aws_lb_target_group.udacity: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-2:589771056122:targetgroup/udacity-lb-tg/6be080836a3ecf9f]
module.vpc.aws_route_table_association.private[1]: Creating...
module.vpc.aws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-08c9774303d5f84671080289494]
module.vpc.aws_route.public_internet_gateway[1]: Creation complete after 1s [id=r-rtb-08c9774303d5f84671080289494]
module.vpc.aws_route_table_association.private[0]: Creating...
module.vpc.aws_route_table_association.private[2]: Creating...
module.vpc.aws_route_table_association.private[1]: Creation complete after 2s [id=rtbassoc-0840aea6909dd0fc7]
module.vpc_west.aws_subnet.public[0]: Still creating... [10s elapsed]
module.vpc_west.aws_subnet.public[1]: Still creating... [10s elapsed]
module.vpc.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-08ce82b40b999b813]
module.project_ec2.aws_security_group.ec2_sg: Creation complete after 5s [id=sg-0be7a2ad2816c48e1]
module.vpc.aws_route_table_association.private[2]: Creation complete after 2s [id=rtbassoc-08cf6cc99ac2bed80]
module.project_rds_p.aws_security_group.db_sg_1: Creation complete after 5s [id=sg-016cc21b3e8fe3cd1]
module.project_rds_p.aws_rds_cluster.udacity_cluster: Creating...
module.vpc_west.aws_subnet.public[1]: Creation complete after 12s [id=subnet-0db8f80649d925a33]
module.vpc_west.aws_subnet.public[0]: Creation complete after 12s [id=subnet-03dd3625ea18e958f]
module.vpc_west.aws_route_table_association.public[1]: Creating...
module.vpc_west.aws_route_table_association.public[0]: Creating...
module.vpc_west.aws_nat_gateway.this[0]: Creating...
module.vpc_west.aws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-09101d0b79ebb444c]
module.vpc_west.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-0de0ee224f85591bb]
module.vpc.aws_subnet.public[2]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public[1]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public[0]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public[2]: Creation complete after 13s [id=subnet-081ffbe18a71344db]
module.vpc.aws_subnet.public[1]: Creation complete after 13s [id=subnet-01941ccbe12eaebea]
module.vpc.aws_subnet.public[0]: Creation complete after 12s [id=subnet-033a60484fed09654]
module.project_ec2.aws_instance.ubuntu[2]: Creating...
module.project_alb.aws_lb.udacity: Creating...
module.vpc.aws_route_table_association.public[0]: Creating...
module.vpc.aws_nat_gateway.this[0]: Creating...
module.vpc.aws_route_table_association.public[2]: Creating...
module.project_ec2.aws_instance.ubuntu[0]: Creating...
module.vpc.aws_route_table_association.public[1]: Creating...
module.project_ec2.aws_instance.ubuntu[1]: Creating...
module.vpc.aws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-033023a8f6fff44e1]
module.vpc.aws_route_table_association.public[2]: Creation complete after 1s [id=rtbassoc-0c9115c40ee6f7927]
module.vpc.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-0ff5ca99732906144]
module.project_rds_p.aws_rds_cluster.udacity_cluster: Still creating... [10s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [10s elapsed]
module.project_ec2.aws_instance.ubuntu[2]: Still creating... [10s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [10s elapsed]
module.project_ec2.aws_instance.ubuntu[0]: Still creating... [10s elapsed]
module.project_ec2.aws_instance.ubuntu[1]: Still creating... [10s elapsed]
module.project_rds_p.aws_rds_cluster.udacity_cluster: Still creating... [20s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [20s elapsed]
module.project_ec2.aws_instance.ubuntu[2]: Creation complete after 15s [id=i-0530120529ef8327d]
module.project_ec2.aws_instance.ubuntu[1]: Creation complete after 16s [id=i-0a9323f9c147c9dff]
module.project_ec2.aws_instance.ubuntu[0]: Creation complete after 16s [id=i-0035ae3747d7a1e0c]
module.project_alb.aws_lb_target_group_attachment.udacity[0]: Creating...
module.project_alb.aws_lb_target_group_attachment.udacity[2]: Creating...
module.project_alb.aws_lb_target_group_attachment.udacity[1]: Creating...
module.project_alb.aws_lb_target_group_attachment.udacity[1]: Creation complete after 0s [id=arn:aws:elasticloadbalancing:us-east-2:589771056122:targetgroup/udacity-lb-tg/6be080836a3ecf9f-20220812164349089300000001]
module.project_alb.aws_lb_target_group_attachment.udacity[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-2:589771056122:targetgroup/udacity-lb-tg/6be080836a3ecf9f-20220812164349564000000002]
module.project_alb.aws_lb_target_group_attachment.udacity[2]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-2:589771056122:targetgroup/udacity-lb-tg/6be080836a3ecf9f-20220812164349874500000003]
module.project_alb.aws_lb.udacity: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [20s elapsed]
module.project_rds_p.aws_rds_cluster.udacity_cluster: Still creating... [30s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [30s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [30s elapsed]
module.project_rds_p.aws_rds_cluster.udacity_cluster: Still creating... [40s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [40s elapsed]
module.project_rds_p.aws_rds_cluster.udacity_cluster: Creation complete after 42s [id=udacity-db-cluster]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Creating...
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Creating...
module.project_alb.aws_lb.udacity: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [40s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [50s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [1m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [20s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m0s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [1m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [30s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m10s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Still creating... [1m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [40s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m20s elapsed]
module.vpc_west.aws_nat_gateway.this[0]: Creation complete after 1m27s [id=nat-0d0483e4e8a2b0add]
module.vpc_west.aws_route.private_nat_gateway[1]: Creating...
module.vpc_west.aws_route.private_nat_gateway[0]: Creating...
module.vpc_west.aws_route.private_nat_gateway[1]: Creation complete after 2s [id=r-rtb-08ee97fe28a8095ae1080289494]
module.vpc_west.aws_route.private_nat_gateway[0]: Creation complete after 2s [id=r-rtb-0ca9157bf8c0c91041080289494]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [50s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [1m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [1m0s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [1m40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [1m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Creation complete after 1m49s [id=nat-0bb63c5120be25b50]
module.vpc.aws_route.private_nat_gateway[1]: Creating...
module.vpc.aws_route.private_nat_gateway[2]: Creating...
module.vpc.aws_route.private_nat_gateway[0]: Creating...
module.project_alb.aws_lb.udacity: Still creating... [1m50s elapsed]
module.vpc.aws_route.private_nat_gateway[1]: Creation complete after 2s [id=r-rtb-09b47162c38f6feef1080289494]
module.vpc.aws_route.private_nat_gateway[2]: Creation complete after 2s [id=r-rtb-0292f329ea560ecf61080289494]
module.vpc.aws_route.private_nat_gateway[0]: Creation complete after 2s [id=r-rtb-017071547e2a055971080289494]
module.project_eks.data.aws_iam_policy_document.eks_assume_role_policy: Reading...
module.project_eks.data.aws_iam_policy_document.eks_node_assume_role_policy: Reading...
module.project_eks.aws_iam_policy.eks_node_instance_policy: Creating...
module.project_eks.aws_security_group.eks-cluster: Creating...
module.project_eks.aws_iam_policy.eks_cluster_role_cloudwatch_policy: Creating...
module.project_eks.data.aws_iam_policy_document.eks_node_assume_role_policy: Read complete after 1s [id=1903849331]
module.project_eks.data.aws_iam_policy_document.eks_assume_role_policy: Read complete after 1s [id=189502314]
module.project_eks.aws_iam_role.eks_node_cluster_role: Creating...
module.project_eks.aws_iam_role.eks_cluster_role: Creating...
module.project_eks.aws_iam_policy.eks_cluster_role_cloudwatch_policy: Creation complete after 1s [id=arn:aws:iam::589771056122:policy/app-udacity-eks-cluster-role-cloudwatch-policy]
module.project_eks.aws_iam_policy.eks_node_instance_policy: Creation complete after 2s [id=arn:aws:iam::589771056122:policy/app-udacity-instance-policy]
module.project_eks.aws_iam_role.eks_node_cluster_role: Creation complete after 2s [id=app-udacity-eks-node-role]
module.project_eks.aws_iam_role.eks_cluster_role: Creation complete after 2s [id=app-udacity-eks-cluster-role]
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_CloudWatchAgentServerPolicy: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Creating...
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSCloudwatchPolicy: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_harmony_policy_attachment: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Creation complete after 1s [id=app-udacity-eks-node-role-20220812164527447900000004]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_CloudWatchAgentServerPolicy: Creation complete after 1s [id=app-udacity-eks-node-role-20220812164527461900000005]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Creating...
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Creation complete after 1s [id=app-udacity-eks-node-role-20220812164527757900000008]
module.project_eks.aws_iam_role_policy_attachment.node_harmony_policy_attachment: Creation complete after 1s [id=app-udacity-eks-node-role-20220812164527470900000007]
module.project_eks.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Creation complete after 1s [id=app-udacity-eks-node-role-20220812164527464300000006]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSCloudwatchPolicy: Creation complete after 1s [id=app-udacity-eks-node-role-20220812164527776300000009]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy: Creation complete after 0s [id=app-udacity-eks-cluster-role-2022081216452808620000000a]
module.project_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Creation complete after 1s [id=app-udacity-eks-cluster-role-2022081216452846010000000b]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [1m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [1m20s elapsed]
module.project_eks.aws_security_group.eks-cluster: Creation complete after 4s [id=sg-052fc4e776e6b9173]
module.project_eks.aws_eks_cluster.cluster: Creating...
module.project_alb.aws_lb.udacity: Still creating... [2m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [1m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [1m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [10s elapsed]
module.project_alb.aws_lb.udacity: Still creating... [2m10s elapsed]
module.project_alb.aws_lb.udacity: Creation complete after 2m16s [id=arn:aws:elasticloadbalancing:us-east-2:589771056122:loadbalancer/app/udacity-lb-tf/72184443a60e8890]
module.project_alb.aws_lb_listener.udacity: Creating...
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [1m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [1m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [20s elapsed]
module.project_alb.aws_lb_listener.udacity: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-2:589771056122:listener/app/udacity-lb-tf/72184443a60e8890/3fbca47a6238e2a6]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [1m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [1m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [2m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [2m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [2m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [2m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [2m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [2m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [1m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [2m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [2m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [1m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [2m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [2m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [1m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [2m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [2m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [1m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [3m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [3m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [1m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [3m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [3m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [1m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [3m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [3m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [2m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [3m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [3m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [2m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [3m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [3m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [2m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [3m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [3m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [2m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [4m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [4m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [2m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [4m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [4m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [2m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [4m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [4m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [3m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [4m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [4m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [3m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [4m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [4m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [3m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [4m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [4m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [3m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [5m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [5m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [3m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [5m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [5m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [3m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [5m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [5m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [4m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [5m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [5m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [4m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [5m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [5m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [4m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [5m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [5m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [4m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [6m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [6m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [4m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [6m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [6m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [4m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [6m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [6m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [5m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [6m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [6m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [5m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [6m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [6m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [5m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [6m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [6m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [5m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [7m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [7m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [5m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [7m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [7m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [5m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Still creating... [7m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [7m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [6m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[1]: Creation complete after 7m26s [id=udacity-db-instance-1]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [7m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [6m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [7m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [6m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [7m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [6m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [8m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [6m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [8m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [6m51s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [8m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [7m1s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [8m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [7m11s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [8m40s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [7m21s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [8m50s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [7m31s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [9m0s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [7m41s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [9m10s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [7m51s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [9m20s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [8m1s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [9m30s elapsed]
module.project_eks.aws_eks_cluster.cluster: Still creating... [8m11s elapsed]
module.project_eks.aws_eks_cluster.cluster: Creation complete after 8m15s [id=udacity-cluster]
data.aws_eks_cluster.cluster: Reading...
data.aws_eks_cluster_auth.cluster: Reading...
data.aws_eks_cluster_auth.cluster: Read complete after 0s [id=udacity-cluster]
module.project_eks.aws_eks_node_group.node: Creating...
data.aws_eks_cluster.cluster: Read complete after 0s [id=udacity-cluster]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [9m40s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [9m50s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10m0s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10m10s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10m20s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10m30s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [1m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10m40s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [1m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [10m50s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [1m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [11m0s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [1m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [11m10s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [1m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [11m20s elapsed]
module.project_eks.aws_eks_node_group.node: Still creating... [1m50s elapsed]
module.project_eks.aws_eks_node_group.node: Creation complete after 1m51s [id=udacity-cluster:app-udacity-node-group]
kubernetes_namespace.udacity: Creating...
kubernetes_namespace.monitoring: Creating...
kubernetes_namespace.udacity: Creation complete after 1s [id=udacity]
kubernetes_namespace.monitoring: Creation complete after 1s [id=monitoring]
kubernetes_service.grafana-external: Creating...
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [11m30s elapsed]
kubernetes_service.grafana-external: Creation complete after 5s [id=monitoring/grafana-external]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [11m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [11m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [12m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [12m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [12m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [12m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [12m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [12m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [13m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [13m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [13m20s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [13m30s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [13m40s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [13m50s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [14m0s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Still creating... [14m10s elapsed]
module.project_rds_p.aws_rds_cluster_instance.udacity_instance[0]: Creation complete after 14m20s [id=udacity-db-instance-0]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Creating...
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [1m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [1m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [1m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [1m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [1m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [1m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [2m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [2m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [2m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [2m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [2m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [2m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [3m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [3m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [3m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [3m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [3m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [3m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [4m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [4m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [4m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [4m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [4m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [4m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [5m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [5m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [5m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [5m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [5m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [5m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [6m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [6m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [6m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [6m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [6m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [6m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [7m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [7m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [7m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [7m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [7m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [7m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [8m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [8m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [8m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [8m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [8m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [8m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [9m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [9m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [9m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [9m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [9m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [9m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [10m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [11m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [11m10s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [11m20s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [11m30s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [11m40s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [11m50s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Still creating... [12m0s elapsed]
module.project_rds_s.aws_rds_cluster.udacity_cluster-s: Creation complete after 12m2s [id=udacity-db-cluster-s]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Creating...
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Creating...
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [1m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [1m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [1m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [1m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [1m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [1m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [1m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [1m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [1m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [1m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [1m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [1m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [2m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [2m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [2m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [2m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [2m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [2m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [2m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [2m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [2m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [2m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [2m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [2m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [3m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [3m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [3m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [3m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [3m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [3m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [3m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [3m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [3m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [3m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [3m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [3m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [4m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [4m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [4m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [4m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [4m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [4m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [4m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [4m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [4m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [4m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [4m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [4m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [5m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [5m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [5m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [5m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [5m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [5m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [5m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [5m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [5m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [5m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [5m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [5m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [6m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [6m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [6m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [6m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [6m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [6m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [6m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [6m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [6m40s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [6m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [6m50s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [6m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [7m0s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [7m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [7m10s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [7m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [7m20s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [7m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Still creating... [7m30s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [7m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[1]: Creation complete after 7m34s [id=udacity-db-instance-1-s]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [7m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [7m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [8m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [8m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [8m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [8m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [8m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [8m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [9m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [9m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [9m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [9m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [9m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [9m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [10m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [11m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [11m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [11m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [11m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [11m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [11m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [12m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [12m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [12m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [12m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [12m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [12m51s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [13m1s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [13m11s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [13m21s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [13m31s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Still creating... [13m41s elapsed]
module.project_rds_s.aws_rds_cluster_instance.udacity_instance-s[0]: Creation complete after 13m47s [id=udacity-db-instance-0-s]

Apply complete! Resources: 85 added, 0 changed, 0 destroyed.

Outputs:

account_id = "589771056122"
caller_arn = "arn:aws:iam::589771056122:user/trucld1-udacity"
caller_user = "AIDAYSUIYEP5CG7XZHII2"
private_subnet_ids = [
  "subnet-021ee4548145d8bb3",
  "subnet-084c2893494395779",
]
public_subnet_ids = [
  "subnet-03dd3625ea18e958f",
  "subnet-0db8f80649d925a33",
]
vpc_id = "vpc-09f2e9e2510d36448"
ldtruc@UBT-2204:~/ldtruc/project/starter-code/zone1$
